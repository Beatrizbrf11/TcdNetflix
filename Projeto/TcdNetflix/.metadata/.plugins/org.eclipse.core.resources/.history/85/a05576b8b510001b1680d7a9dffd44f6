package com.tcdNetflix.filmeservice.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.tcdNetflix.filmeservice.entity.Filme;
import com.tcdNetflix.filmeservice.service.FilmeService;

@RestController
@RequestMapping(value = "/v1/filmeservice")
public class FilmeController {

	@Autowired
	private FilmeService service;

	@RequestMapping(value = "/{id}", method = RequestMethod.GET)
	public ResponseEntity<?> Detalhe(@PathVariable(name = "id") int id) {
		return ResponseEntity.ok(service.getFilmePorId(id));
	}

	@RequestMapping(value = "/filme/{nome}", method = RequestMethod.GET)
	public ResponseEntity<?> FiltrarPorNome(@PathVariable(name = "nome") String nome) {
		return ResponseEntity.ok(service.getFilmeByNome(nome));
	}

	@RequestMapping(value = "/genero/{idGenero}", method = RequestMethod.GET)
	public ResponseEntity<?> FiltrarPorGenero(@PathVariable(name = "idGenero") int idGenero) {
		return ResponseEntity.ok(service.getFilmeGeneroByIdGenero(idGenero));
	}

	@RequestMapping(value = "/filmes", method = RequestMethod.POST)
	public ResponseEntity<?> Favoritos(@RequestBody List<Integer> ids) {
		return new ResponseEntity<>(service.getFilmes(ids), HttpStatus.OK);
	}

	@RequestMapping(value = "/visto/{idFilme}", method = RequestMethod.PUT)
	public void AtualizarFilmeVisto(@PathVariable(name = "idFilme") int idFilme) {
		service.getAtualizarFilmeVisto(idFilme);
	}

	@RequestMapping(value = "/genero/visto/{idGenero}", method = RequestMethod.GET)
	public ResponseEntity<?> FiltrarPorGeneroMaisVistos(@PathVariable(name = "idGenero") int idGenero) {
		return ResponseEntity.ok(service.getFilmeGeneroMaisVistosByIdGenero(idGenero));
	}
}
